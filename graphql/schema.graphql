"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    articles: [Article!]! @hasMany
}

type Article {
    id: ID!
    title: String!
    content: String!
    author: User! @belongsTo(relation: "user")
}

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    article(id: ID! @eq): Article @find
    articles: [Article!]! @paginate
    me: User @auth(guard: "api")
}

# type Mutation @guard(with: ["api"]) {
#     # createUser(
#     #     name: String!
#     #     email: String! @rules(apply: ["email", "unique:users"])
#     #     password: String! @bcrypt @rules(apply: ["min:6"])
#     # ): User @create

#     # login(email: String!, password: String!): String
#     #     @field(resolver: "AuthMutator")

#     createArticle(title: String!, content: String!): Article
#         @field(resolver: "ArticleMutator")
# }

type Mutation @guard(with: ["api"]) {
    createArticle(title: String!, content: String!): Article
        @field(resolver: "ArticleMutator")
}
